# -*- coding: utf-8 -*-
#
# Configuration file for the signcontrol.py program.
# You need to edit the following variables to fit your needs.
#
# Original version written in 2007, and maintained since then by Julien Ã‰LIE.
#
# Github repository to view the latest source code and report possible issues:
#   https://github.com/Julien-Elie/usenet-signcontrol/
#
# Please also read the Usenet hierarchy administration FAQ:
#   https://www.eyrie.org/~eagle/faqs/usenet-hier.html
#
# Discussions about Usenet hierarchy administration in general take place in
# the news.admin.hierarchies newsgroup; do not hesitate to participate in this
# newsgroup!
#
# SPDX-License-Identifier: MIT

# The path to the required GPG executable.  GnuPG <https://www.gnupg.org/>
# must be installed before using the signcontrol.py script.
# Its path is usually "C:\Progra~1\GNU\GnuPG\gpg.exe" or "/usr/bin/gpg".
#PROGRAM_GPG = "C:\Progra~1\GNU\GnuPG\gpg.exe"
PROGRAM_GPG = "/usr/bin/gpg"

# Whether compatibility with MIT PGP 2.6.2 (or equivalent) should be kept.
# Though this is now fairly obsolete, a few news servers still haven't been
# updated to be able to process newer and more secure signing algorithms.
# Such servers do not recognize recent signing algorithms; however, current
# news servers may refuse to process messages signed with the insecure MD5
# algorithm.
# Possible values are "True", "False" or "Only" (default is "False").
# - When set to "True", signcontrol.py will generate two control articles: one
#   in a format compatible with MIT PGP 2.6.2 (or equivalent) and another with
#   a newer and more secure format.  Sending these two control articles will
#   then ensure a widest processing.
# - When set to "False", signcontrol.py will only generate control articles in
#   a newer and more secure format.
# - When set to "Only", signcontrol.py will only generate control articles in
#   a format compatible with MIT PGP 2.6.2 (or equivalent).
PGP2_COMPATIBILITY = "False"

# One of the user ID of the PGP key used to sign control articles.
# The user ID is the whole contents of a "uid" line, as shown in a list of all
# keys from the secret keyring.
# Note that if you do not already have a PGP key, signcontrol.py can generate
# one for you.
ID = "control-hierarchy@my.news.server.com"

# The e-mail from which control articles are sent.
MAIL = "control-hierarchy@my.news.server.com"

# The host which appears in the second part of the Message-ID of generated
# control articles.  It is usually the name of a news server.
HOST = "my.news.server.com"

# An existing newsgroup of the hierarchy (where checkgroups control articles
# will be fed).  If an administrative newsgroup exists, put it.  Otherwise,
# any other newsgroup of the hierarchy will be fine.
ADMIN_GROUP = "my.hierarchy.admin"

# The name which appears in the From header field.
# You should only use ASCII characters.  Otherwise, you have
# to MIME-encode it (for instance: "=?ISO-8859-15?Q?Julien_=C9LIE?=").
NAME = "Control"

# The scope of the hierarchy according to Section 5.2.3 of RFC 5537
# <https://datatracker.ietf.org/doc/html/rfc5537#section-5.2.3>.
# For instance: "fr" (for fr.*), "de !de.alt" (for de.* excepting de.alt.*)
# or "de.alt" (for de.alt.*).
CHECKGROUPS_SCOPE = "my.hierarchy"

# The URL where the public PGP key can be found.
# If you do not have any, leave the default of
# "https://ftp.isc.org/pub/pgpcontrol/README.html".
# If you want to mention several URLs (like the home page of the hierarchy),
# use a multi-line text where each line, except for the first, begins
# with a tabulation.
#URL = "https://www.usenet-fr.net/pgp-fr-2020.txt
#	https://www.usenet-fr.net/informations.html"
URL = "https://ftp.isc.org/pub/pgpcontrol/README.html"

# The message which will be written in a newgroup control article for
# a moderated newsgroup.  All occurrences of "$GROUP$" will be replaced
# by the name of the newsgroup.
# If you want to use the quote ", you have to escape it as follows: \".
# The default text is:
# NEWGROUP_MESSAGE_MODERATED =
# "The moderated newsgroup $GROUP$ has just been created.
# Please add this group to your news server."
NEWGROUP_MESSAGE_MODERATED =
"The moderated newsgroup $GROUP$ has just been created.
Please add this group to your news server."

# The message which will be written in a newgroup control article for
# an unmoderated newsgroup.  All occurrences of "$GROUP$" will be replaced
# by the name of the newsgroup.
# If you want to use the quote ", you have to escape it as follows: \".
# The default text is:
# NEWGROUP_MESSAGE_UNMODERATED =
# "The unmoderated newsgroup $GROUP$ has just been created.
# Please add this group to your news server."
NEWGROUP_MESSAGE_UNMODERATED =
"The unmoderated newsgroup $GROUP$ has just been created.
Please add this group to your news server."

# The message which will be written in an rmgroup control article.
# All occurrences of "$GROUP$" will be replaced by the name of the newsgroup.
# If you want to use the quote ", you have to escape it as follows: \".
# The default text is:
# RMGROUP_MESSAGE =
# "The newsgroup $GROUP$ is now defunct.
# Please remove this group from your news server."
RMGROUP_MESSAGE =
"The newsgroup $GROUP$ is now defunct.
Please remove this group from your news server."

# Whether the hierarchy is public or private.  If it is private
# (that is to say if it is intended to remain in a local server
# with private access and if it is not fed to other Usenet news servers),
# the value should be "True", so that checkgroups control articles
# are not crossposted to the news.admin.hierarchies newsgroup.
# Possible values are "True" or "False" (default is "False").
PRIVATE_HIERARCHY = "False"

# The file which contains the current checkgroups.  Make sure it is correctly
# encoded in UTF-8 (if of course it contains non-ASCII characters).
CHECKGROUPS_FILE = "checkgroups.txt"

# The encoding of control articles.
# The default value is "UTF-8" (which is the charset that SHOULD be used for
# non-ASCII characters, per Section 4.2 of RFC 5537).
# Make sure your terminal is configured for UTF-8 input too!
ENCODING = "UTF-8"
